name: install_maven_dependencies

permissions:
  checks: write
  contents: read
  issues: read
  pull-requests: write

on:
  workflow_call:
    inputs:
      artifact_name:
        description: 'Name of the artifact env'
        required: false
        default: 'prod'
        type: string
      version_tag:
        description: 'Name of the tag to build'
        required: false
        default: 'latest'
        type: string
      bump:
        description: 'whether to bump the version number by a major minor patch amount or none'
        required: false
        default: 'patch'
        type: string
      ref:
        description: 'git reference to use with the checkout use default_branch to have that calculated'
        required: false
        default: "default"
        type: string

  workflow_dispatch:
    inputs:
      artifact_name:
        description: 'Name of the artifact env'
        required: false
        default: 'prod'
        type: string
      version_tag:
        description: 'Version tag to use: (bump must also be set to none to keep a specific version'
        required: false
        default: 'latest'
        type: string
      bump:
        description: |
          How to optionally bump the semver version ( Major.Minor.Patch ) : git log will be searched for
          '#major #minor #patch' or feat/ or fix/ branch names to optionally override the bump. Set to none to keep a specific version
        required: false
        options:
          - patch
          - minor
          - major
          - none
        type: choice
      ref:
        description: 'git reference to use with the checkout use default_branch to have that calculated'
        required: false
        default: "default"
        type: string


jobs:
  seed_cache:
    runs-on: ubuntu-latest
    steps:
      - name: git-checkout-ref-action
        id: ref
        uses: ORCID/git-checkout-ref-action@main
        with:
          default_branch: ${{ github.event.repository.default_branch }}
          ref: ${{ inputs.ref }}

      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.ref.outputs.ref }}
          # checkout some history so we can scan commits for bump messages
          # NOTE: history does not include tags!
          fetch-depth: 100

      - name: find next version
        id: version
        uses: ORCID/version-bump-action@main
        with:
          version_tag: ${{ inputs.version_tag }}
          bump: ${{ inputs.bump }}

      - name: Set up Open JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache local Maven repository keyed off the last version
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}-${{ steps.version.outputs.version_last_numeric }}
          restore-keys: |
            ${{ runner.os }}-maven-


      - name: show path
        run: |
          echo ${{ steps.version.outputs.version_last_numeric }}
          false
          exit 1
          echo "$PATH"
          which java
          echo "$JAVA_HOME"
          echo "$tag_numeric"
          echo "$project"
          if [[ -d ~/.m2/repository/ ]];then
            find ~/.m2/repository/ -name '*.jar' | grep orcid
          fi

        shell: bash
        env:
          version_tag_numeric: "${{ steps.version.outputs.version_tag_numeric }}"
          version_last_numeric: "${{ steps.version.outputs.version_last_numeric }}"
          project: "${{ inputs.artifact_name }}"

      - name: populate orcid-persistence/src/main/resources/release_name.txt with numeric tag
        run: |
          echo "$version_tag_numeric" > orcid-persistence/src/main/resources/release_name.txt
        env:
          version_tag_numeric: "${{ steps.version.outputs.version_tag_numeric }}"

      - name: bump version of the parent pom and connected projects
        run: |
          mvn -T 1C --batch-mode versions:set -DskipTests \
              -DnewVersion="$version_tag_numeric" -DgenerateBackupPoms=false
        env:
          version_tag_numeric: "${{ steps.version.outputs.version_tag_numeric }}"

      - name: bump the tagged version in the poms of projects not tied to the parent pom (orcid-test)
        run: |
          mvn -T 1C --batch-mode versions:set -DskipTests \
              -DnewVersion="$version_tag_numeric" -DgenerateBackupPoms=false -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              --projects orcid-test
        env:
          version_tag_numeric: "${{ steps.version.outputs.version_tag_numeric }}"

      - name: install orcid-parent into our local maven repo because the builds depend a version release
        run: |
          mvn -T 1C --batch-mode --non-recursive clean install -DskipTests \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        env:
          version_tag_numeric: "${{ steps.version.outputs.version_tag_numeric }}"

      - name: install orcid-test into our local maven repo because the builds depend a version release
        run: |
          mvn -T 1C --batch-mode clean install -DskipTests\
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              --projects orcid-test
        env:
          version_tag_numeric: "${{ steps.version.outputs.version_tag_numeric }}"

      - name: install orcid-utils into our local maven repo because the builds depend a version release
        run: |
          mvn -T 1C --batch-mode clean install -DskipTests \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              --projects orcid-utils
        env:
          version_tag_numeric: "${{ steps.version.outputs.version_tag_numeric }}"

      - name: install orcid-persistence into our local maven repo because orcid-core depends on it
        run: |
          mvn -T 1C --batch-mode clean install -DskipTests \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              --projects orcid-persistence
        env:
          version_tag_numeric: "${{ steps.version.outputs.version_tag_numeric }}"

      - name: install orcid-core into our local maven repo because the builds depend a version release
        run: |
          mvn -T 1C --batch-mode clean install -DskipTests \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              --projects orcid-core
        env:
          version_tag_numeric: "${{ steps.version.outputs.version_tag_numeric }}"

      - name: install orcid-api-common into our local maven repo because the deploy depends on this orcid-web orcid-iapi orcid-api
        run: |
          mvn -T 1C --batch-mode clean install -DskipTests \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              --projects orcid-api-common
        env:
          version_tag_numeric: "${{ steps.version.outputs.version_tag_numeric }}"

      - name: check some build related things
        run: |
          git --version
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git status
          git diff
          if [[ -d ~/.m2/repository/ ]];then
            find ~/.m2/repository/ -name '*.jar' | grep orcid
          fi
