name: bld_maven

permissions:
  checks: write
  contents: read
  issues: read
  pull-requests: write

on:
  workflow_call:
    inputs:
      artifact_name:
        description: 'Name of the artifact to build'
        required: false
        default: "orcid-message-listener"
        type: string
      version_tag:
        description: 'Name of the tag to build'
        required: false
        default: "v2"
        type: string

  workflow_dispatch:
    inputs:
      artifact_name:
        description: 'Name of the artifact to build'
        required: false
        default: "orcid-message-listener"
        type: string
      version_tag:
        description: 'Name of the tag to build'
        required: false
        default: "v2"
        type: string

jobs:
  bld_maven:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: find next version
        id: version
        uses: ORCID/version-bump-action@main
        with:
          version_tag: ${{ inputs.version_tag }}

#       - name: Setup asdf
#         uses: asdf-vm/actions/setup@3dcedf44f74a5d84ca0aacf1e1b0c18649db6f01
# 
#       - name: Cache asdf
#         uses: actions/cache@v3
#         with:
#           path: |
#             ~/.asdf
#           key: ${{ runner.os }}-asdf-${{ '**/.tool-versions' }}
#           restore-keys: |
#             ${{ runner.os }}-asdf-
# 
#       - name: asdf install
#         uses: asdf-vm/actions/install@3dcedf44f74a5d84ca0aacf1e1b0c18649db6f01
# 
      - name: Set up Open JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: show path
        run: |
          echo "$PATH"
          which java
          echo "$JAVA_HOME"
          echo "$tag_numeric"
          echo "$project"
        shell: bash
        env:
          tag_numeric: "${{ steps.version.outputs.version_tag }}"
          project: "${{ inputs.artifact_name }}"

      - name: bump version of the parent pom and connected projects
        run: |
          mvn -T 1C --batch-mode versions:set \
              -DnewVersion="$tag_numeric" -DgenerateBackupPoms=false -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        env:
          tag_numeric: "${{ steps.version.outputs.version_tag }}"

      - name: bump the tagged version in the poms of projects not tied to the parent pom (orcid-test)
        run: |
          mvn -T 1C --batch-mode versions:set \
              -DnewVersion="$tag_numeric" -DgenerateBackupPoms=false -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              --projects orcid-test
        env:
          tag_numeric: "${{ steps.version.outputs.version_tag }}"

      - name: install orcid-test into our local maven repo because the builds depend a version release
        run: |
          mvn -T 1C --batch-mode clean install \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              --projects orcid-test
        env:
          tag_numeric: "${{ steps.version.outputs.version_tag }}"

      - name: setup node for angular static file
        if: ${{ inputs.artifact_name == 'orcid-web' }}
        uses: actions/setup-node@v3
        with:
          node-version: 18.7.0

      - name: build our project
        run: |
          mvn -T 1C --batch-mode -am package -DskipTests \
              -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \
              --projects "$project"
        env:
          tag_numeric: "${{ steps.version.outputs.version_tag }}"
          project: "${{ inputs.artifact_name }}"

###########################################################################################

      - name: build angular parts if we are building orcid-web
        if: ${{ inputs.artifact_name == 'orcid-web' }}
        run: |
          echo "Build angular_orcid_generated.js"
          cd orcid-nodejs
          mvn -T 1C --batch-mode -P ci clean compile \
            -Dnodejs.workingDirectory="${{ github.workspace }}/orcid-web/src/main/webapp/static/javascript/ng1Orcid" \
            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

          echo "Copying angular_orcid_generated to its final destination"
          cp ${{ github.workspace }}/orcid-web/src/main/webapp/static/javascript/ng1Orcid/angular_orcid_generated.js ${{ github.workspace }}/orcid-web/target/orcid-web/static/javascript/ng1Orcid/

          echo "Packaging orcid-web"
          rm -f ${{ github.workspace }}/orcid-web/target/orcid-web.war
          cd ${{ github.workspace }}/orcid-web/target/orcid-web

          echo "$tag_numeric" > ${{ github.workspace }}/orcid-web/target/orcid-web/static/version

          echo "Creating the war file"
          jar -cf orcid-web.war .

          # check_error "Creating the orcid-web.war file"
          echo "Moving war file to the target folder"
          cp orcid-web.war ${{ github.workspace }}/orcid-web/target/
          echo "orcid-web.war is ready"

        env:
          tag_numeric: "${{ steps.version.outputs.version_tag }}"
          project: "${{ inputs.artifact_name }}"





#       - name: bump version using maven and setup orcid-test
#         run: |
#           set -o errexit -o errtrace -o nounset -o functrace -o pipefail
#           shopt -s inherit_errexit 2>/dev/null || true
#           trap 'echo "exit_code $? line $LINENO linecallfunc $BASH_COMMAND"' ERR
# 
#           # bump the tagged version in the poms tied to the parent pom
#           mvn versions:set -DnewVersion="$tag_numeric" -DgenerateBackupPoms=false --batch-mode
# 
#           # bump the tagged version in the poms of projects not tied to the parent pom
#           mvn versions:set -DnewVersion="$tag_numeric" -DgenerateBackupPoms=false --projects orcid-test --batch-mode
# 
#           # install orcid-test into our local maven repo because the builds depend a version release
#           mvn --projects orcid-test clean install --batch-mode -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
# 
#         shell: bash
#         env:
#           tag_numeric: "${{ steps.version.outputs.version_tag_no_v }}"

# 

#       - name: build project using mvnd
#         run: |
#           set -o errexit -o errtrace -o nounset -o functrace -o pipefail
#           shopt -s inherit_errexit 2>/dev/null || true
#           trap 'echo "exit_code $? line $LINENO linecallfunc $BASH_COMMAND"' ERR
# 
#           mvnd versions:set -DnewVersion="$tag_numeric" -DgenerateBackupPoms=false --projects "$project" -am package -DskipTests --batch-mode
# 
#         shell: bash
#         env:
#           tag_numeric: "${{ steps.version.outputs.version_tag_no_v }}"
#           project: "${{ inputs.artifact_name }}"
# 




#       - name: import shellkit
#         uses: ORCID/shellkit-action@main
# 

# 
#       - name: test shellkit github functions
#         run: |
#           . /opt/shellkit/profile.d/shellkit.sh
# 
           


